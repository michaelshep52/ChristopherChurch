@page "/PrayerRequest"
@inject IEmailService EmailService
@inject Microsoft.Extensions.Configuration.IConfiguration Configuration

<!--TODO!! Speed it up-->

<div class="text-center">
    <h3>Prayer Request</h3>
</div>
@if (isSubmitted)
{
    <div class="col col-12 text-center">
        <h5>Thanks for your prayer request!</h5>
    </div>
}
else
{
    <div class="container-fluid py-3">
        <div class="row">
            <div class="col col-12 text-center">
                <p>We would love to pray for you. Please fill out this form below to inform the Church of your needs.</p>
            </div>
            <div>
                <EditForm Model="@emailModel" OnValidSubmit="SubmitForm">
                    <DataAnnotationsValidator />
                    <div class="form-group pb-2">
                        <label for="name">Your Name:</label>
                        <InputText type="text" id="name" @bind-Value="emailModel.Name" class="form-control" placeholder="ex. Jane Doe"  />
                        <ValidationMessage For="@(() => emailModel.Name)" />
                    </div>
                    <div class="form-group pb-2">
                        <label for="request">Prayer Request:</label>
                        <InputTextArea id="request" @bind-Value="emailModel.Request" class="form-control" placeholder="ex. Pray for me." ></InputTextArea>
                        <ValidationMessage For="@(() => emailModel.Request)" />

                    </div>
                    <button type="submit" class="btn btn-outline-primary ">Submit Prayer</button>
                    <span style="font-weight:bold; font-size:28px; color:#c00;">@Message</span>
                </EditForm>
            </div>
        </div>
    </div>
}

@code {
    private EmailModel emailModel = new EmailModel();
    private string name = "";
    private string request ="";
    private bool isSubmitted;

    private string Message { get; set; } = "";

    private async Task SubmitForm()
    {
        try
        {
            await EmailService.SendPrayerRequestAsync(emailModel.Name, emailModel.Request);
            isSubmitted = true;

        }
        catch (Exception ex)
        {
            Message = ex.Message;

        }
    }
}

