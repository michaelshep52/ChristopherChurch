@page "/MinistryForm"
@inject IEmailService EmailService

<section class="ministryform">
    <div class="container-fluid">
        <div class="row justify-content-center">
            <div class="col-12 p-3">
                <h1 class="text-center">Ministry Application Form</h1>
                <hr />
            </div>
        </div>
    </div>
    @if (isSubmitted)
    {
        <div class="col col-12 text-center">
            <h5>Thank you for your application! Our Team will review you application and be in contact with you soon.</h5>
        </div>
    }
    else
    {
        <EditForm Model="@newApplication" OnValidSubmit="@SubmitForm">
            <DataAnnotationsValidator />
            <div class="form-row p-3">
                <div class="text-left">
                    <div class="form-row">
                        <div class="form-group col-8 p-2">
                            <label for="inputFirstName">First Name</label>
                            <InputText id="inputFirstName" type="text" @bind-Value="newApplication.FirstName" name="name" autocomplete="name" class="form-control border-black" placeholder="Jane" />
                            <ValidationMessage For="@(() => newApplication.FirstName)" />
                        </div>
                        <div class="form-group col-8 p-2">
                            <label for="inputLastName">Last Name</label>
                            <InputText id="inputLastName" type="text" @bind-Value="newApplication.LastName" class="form-control border-black" placeholder="Doe" />
                            <ValidationMessage For="@(() => newApplication.LastName)" />
                        </div>
                        <div class="form-group col-8 p-2">
                            <label for="inputEmail">Email</label>
                            <InputText id="inputEmail" type="email" @bind-Value="newApplication.Email" name="email" autocomplete="email" class="form-control border-black" placeholder="jdoe@google.com" />
                            <ValidationMessage For="@(() => newApplication.Email)" />
                        </div>
                    </div>
                    <div class="form-group col-8 p-2">
                        <label for="inputAddress">Address</label>
                        <InputText id="inputAddress" type="text" @bind-Value="newApplication.Address" class="form-control border-black" placeholder="1234 Main St" />
                        <ValidationMessage For="@(() => newApplication.Address)" />
                    </div>
                    <div class="form-group col-8 p-2">
                        <label for="inputAddress2">Address 2</label>
                        <InputText id="inputAddress2" type="text" @bind-Value="newApplication.Address2" class="form-control border-black" placeholder="Apartment, studio, or floor" />
                        <ValidationMessage For="@(() => newApplication.Address2)" />
                    </div>
                    <div class="form-row">
                        <div class="form-group col-5 p-2">
                            <label for="inputCity">City</label>
                            <InputText id="inputCity" type="text" @bind-Value="newApplication.City" name="City" autocomplete="address-level2" class="form-control border-black" placeholder="Jeff" />
                            <ValidationMessage For="@(() => newApplication.City)" />
                        </div>
                        <div class="form-group col-5 p-2">
                            <label for="inputState">State</label>
                            <InputSelect id="inputState" @bind-Value="newApplication.State" name="state" autocomplete="address-level1"  class="form-control border-black">
                                <option selected>Choose...</option>
                                <option>AK</option>
                                <option>AZ</option>
                                <option>AR</option>
                                <option>CA</option>
                                <option>CO</option>
                                <option>CT</option>
                                <option>DE</option>
                                <option>FL</option>
                                <option>GA</option>
                                <option>HI</option>
                                <option>ID</option>
                                <option>IL</option>
                                <option>IN</option>
                                <option>IA</option>
                                <option>KS</option>
                                <option>KY</option>
                                <option>LA</option>
                                <option>ME</option>
                                <option>MD</option>
                                <option>MA</option>
                                <option>MI</option>
                                <option>MN</option>
                                <option>MS</option>
                                <option>MO</option>
                                <option>MT</option>
                                <option>NE</option>
                                <option>NV</option>
                                <option>NH</option>
                                <option>NJ</option>
                                <option>NM</option>
                                <option>NY</option>
                                <option>NC</option>
                                <option>ND</option>
                                <option>OH</option>
                                <option>OR</option>
                                <option>PA</option>
                                <option>RI</option>
                                <option>SC</option>
                                <option>SD</option>
                                <option>TN</option>
                                <option>TX</option>
                                <option>UT</option>
                                <option>VT</option>
                                <option>VA</option>
                                <option>WV</option>
                                <option>WI</option>
                                <option>WY</option>
                            </InputSelect>
                            <ValidationMessage For="@(() => newApplication.State)" />
                        </div>
                        <div class="form-group col-5 p-2">
                            <label for="inputZip">Zip Code</label>
                            <InputText id="inputZip" type="text" @bind-Value="newApplication.Zip" name="zip" autocomplete="postal-code"   class="form-control border-black" placeholder="41701" />
                            <ValidationMessage For="@(() => newApplication.Zip)" />
                        </div>
                    </div>
                    <div class="col-12 p-3">
                        <h3 class="text-center">Ministry Information</h3>
                        <hr />
                    </div>
                    <div class="form-group col-8 p-2">
                        <label for="inputMinistry">Choose a Ministry Team</label>
                        <InputSelect id="inputMinistry" @bind-Value="newApplication.SelectedMinistry" class="form-control border-black">
                        <ValidationMessage For="@(() => newApplication.SelectedMinistry)" />

                            <option selected>Choose...</option>
                            @foreach (var ministry in GetMinistries())
                            {
                                <option>@ministry</option>
                            }
                        </InputSelect>
                    </div>
                    @if (!string.IsNullOrEmpty(newApplication.SelectedMinistry))
                    {
                        <div class="form-group col-8 p-2" style="@($"display: {(newApplication.SelectedMinistry == "Teacher" ? "block" : "none")};")">
                            <label for="inputTeaching">Teaching Team</label>
                            <select id="inputTeaching" class="form-control border-black">
                                <option selected>Choose...</option>
                                <option>Adult Sunday School</option>
                                <option>Teen Sunday School</option>
                                <option>Children Sunday School</option>
                                <option>Adult Wednesday</option>
                                <option>Teen Wednesday</option>
                                <option>Children Wednesday</option>
                            </select>
                        </div>
                        <div class="form-group col-8 p-2" style="@($"display: {(newApplication.SelectedMinistry == "Custodian" ? "block" : "none")};")">
                            <label for="inputCustodian">Custodian Team</label>
                            <select id="inputCustodian" class="form-control border-black">
                                <option selected>Choose...</option>
                                <option>Bathroom</option>
                                <option>Sanctuary</option>
                                <option>Fellowship Hall</option>
                                <option>Window</option>
                            </select>
                        </div>
                        <div class="form-group col-8 p-2" style="@($"display: {(newApplication.SelectedMinistry == "Cook" ? "block" : "none")};")">
                            <label for="inputCook">Cooking Team</label>
                            <select id="inputCook" class="form-control border-black">
                                <option selected>Choose...</option>
                                <option>Sunday School</option>
                                <option>Wednesday Night</option>
                                <option>Care</option>
                            </select>
                        </div>
                        <div class="form-group col-8 p-2" style="@($"display: {(newApplication.SelectedMinistry == "Worship" ? "block" : "none")};")">
                            <label for="inputWorship">Worship Team</label>
                            <select id="inputWorship" class="form-control border-black">
                                <option selected>Choose...</option>
                                <option>Guitar Player</option>
                                <option>Bass Player</option>
                                <option>Drum Player</option>
                                <option>KeyBoard Player</option>
                                <option>Vocalist</option>
                            </select>
                        </div>
                        <div class="form-group col-8 p-2" style="@($"display: {(newApplication.SelectedMinistry == "Greeter" ? "block" : "none")};")">
                            <label for="inputGreeter">Greeter Team</label>
                            <select id="inputGreeter" class="form-control border-black">
                                <option selected>Choose...</option>
                                <option>Front Door</option>
                                <option>Parking Lot</option>
                            </select>
                        </div>
                        <div class="form-group col-8 p-2" style="@($"display: {(newApplication.SelectedMinistry == "Lawn Care" ? "block" : "none")};")">
                            <label for="inputLawn">Lawn Care Team</label>
                            <select id="inputLawn" class="form-control border-black">
                                <option selected>Choose...</option>
                                <option>Weedeater</option>
                                <option>Trimmer</option>
                                <option>Landscaper</option>
                            </select>
                        </div>
                        <div class="form-group col-8 p-2" style="@($"display: {(newApplication.SelectedMinistry == "Parking Lot Care" ? "block" : "none")};")">
                            <label for="inputParking">Parking Lot Care Team</label>
                            <select id="inputParking" class="form-control border-black">
                                <option selected>Choose...</option>
                                <option>Trash Pickup</option>
                                <option>Parking</option>
                            </select>
                        </div>
                        <div class="form-group col-8 p-2" style="@($"display: {(newApplication.SelectedMinistry == "Technical" ? "block" : "none")};")">
                            <label for="inputTechnical">Technical Team</label>
                            <select id="inputTechnical" class="form-control border-black">
                                <option selected>Choose...</option>
                                <option>Computer</option>
                                <option>Sound Board</option>
                            </select>
                        </div>
                        <div class="form-group col-8 p-2" style="@($"display: {(newApplication.SelectedMinistry == "Outreach" ? "block" : "none")};")">
                            <label for="inputOutreach">Outreach Team</label>
                            <select id="inputOutreach" class="form-control border-black">
                                <option selected>Choose...</option>
                                <option>Broshears</option>
                                <option>Marketing</option>
                                <option>Communitcation</option>
                            </select>
                        </div>
                        <div class="form-group col-8 p-2" style="@($"display: {(newApplication.SelectedMinistry == "Care" ? "block" : "none")};")">
                            <label for="inputCare">Care Team</label>
                            <select id="inputCare" class="form-control border-black">
                                <option selected>Choose...</option>
                                <option>Calling</option>
                                <option>Communication(Messaging)</option>
                                <option>Hospital Visits</option>
                                <option>Home Visits</option>
                            </select>
                        </div>
                    }
                    <div class="form-group">
                        <div class="form-check">
                            <input class="form-check-input border-black" type="checkbox" @bind="@newApplication.Authorization" id="invalidCheck" required>
                            <label class="form-check-label" for="invalidCheck">
                                Authorization for background check
                            </label>
                            <ValidationMessage For="@(() => newApplication.Authorization)" />
                        </div>
                    </div>
                    <br />
                    <button type="submit" class="btn btn-outline-primary">Submit</button>
                </div>
            </div>
        </EditForm>
    }
</section>

@code {
    private DisplayMinistryApplicationModel newApplication = new DisplayMinistryApplicationModel { Authorization = false };
    private bool isSubmitted = false;
    private string Message { get; set; } = "";
    private MinistryFormService? ministryFormService;

    protected override void OnInitialized()
    {
        ministryFormService = new MinistryFormService(EmailService);
    }
    private async Task SubmitForm()
    {
        try
        {
            MinistryApplicationModel m = new MinistryApplicationModel
            {
                FirstName = newApplication.FirstName!,
                LastName = newApplication.LastName!,
                Email = newApplication.Email!,
                Address = newApplication.Address!,
                Address2 = newApplication.Address2!,
                City = newApplication.City!,
                State = newApplication.State!,
                Zip = newApplication.Zip!,
                Authorization = newApplication.Authorization!
            };
            isSubmitted = true;
            await ministryFormService!.SubmitApplicationForm(m);
        }
        catch (Exception ex)
        {
            Message = ex.Message;
        }
    }

    private List<string> GetMinistries()
    {
        return new List<string>
            {
            "Teacher", "Custodian", "Cook", "Worship", "Greeter",
            "Lawn Care", "Parking Lot Care", "Technical", "Outreach", "Care"
            };
    }
    }

